%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 300 248
%%Creator: yExport 1.3
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, May 5, 2014 10:10:51 PM CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
300 248 setpagesize
0 0 0 0 setmargins
0 0 setorigin
300 248 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
300.000 0.00000 l
300.000 248.000 l
0.00000 248.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 300 248 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -1230.00 -210.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
1230.00 210.000 m
1530.00 210.000 l
1530.00 458.000 l
1230.00 458.000 l
1230.00 210.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -1230.00 -210.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -1230.00 -210.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -1230.00 -210.000 ] defaultmatrix matrix concatmatrix setmatrix
.200000 .400000 1.00000 RG
newpath
1515.00 420.000 m
1515.00 428.284 1508.28 435.000 1500.00 435.000  c
1491.72 435.000 1485.00 428.284 1485.00 420.000  c
1485.00 411.716 1491.72 405.000 1500.00 405.000  c
1508.28 405.000 1515.00 411.716 1515.00 420.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1496.66 415.404 m
1497.85 415.404 l
1497.85 418.998 l
1502.14 418.998 l
1502.14 415.404 l
1503.33 415.404 l
1503.33 424.154 l
1502.14 424.154 l
1502.14 419.982 l
1497.85 419.982 l
1497.85 424.154 l
1496.66 424.154 l
1496.66 415.404 l
h
f
2 J
10.0000 M
.200000 .400000 1.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1515.00 420.000 m
1515.00 428.284 1508.28 435.000 1500.00 435.000  c
1491.72 435.000 1485.00 428.284 1485.00 420.000  c
1485.00 411.716 1491.72 405.000 1500.00 405.000  c
1508.28 405.000 1515.00 411.716 1515.00 420.000  c
h
S
2 J
10.0000 M
.200000 .400000 1.00000 RG
newpath
1425.00 420.000 m
1425.00 428.284 1418.28 435.000 1410.00 435.000  c
1401.72 435.000 1395.00 428.284 1395.00 420.000  c
1395.00 411.716 1401.72 405.000 1410.00 405.000  c
1418.28 405.000 1425.00 411.716 1425.00 420.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1407.72 415.404 m
1412.75 415.404 l
1412.75 416.404 l
1408.91 416.404 l
1408.91 418.982 l
1412.38 418.982 l
1412.38 419.982 l
1408.91 419.982 l
1408.91 424.154 l
1407.72 424.154 l
1407.72 415.404 l
h
f
2 J
10.0000 M
.200000 .400000 1.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1425.00 420.000 m
1425.00 428.284 1418.28 435.000 1410.00 435.000  c
1401.72 435.000 1395.00 428.284 1395.00 420.000  c
1395.00 411.716 1401.72 405.000 1410.00 405.000  c
1418.28 405.000 1425.00 411.716 1425.00 420.000  c
h
S
2 J
10.0000 M
.200000 .400000 1.00000 RG
newpath
1335.00 390.000 m
1335.00 398.284 1328.28 405.000 1320.00 405.000  c
1311.72 405.000 1305.00 398.284 1305.00 390.000  c
1305.00 381.716 1311.72 375.000 1320.00 375.000  c
1328.28 375.000 1335.00 381.716 1335.00 390.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1317.74 386.373 m
1317.74 393.186 l
1319.18 393.186 l
1320.39 393.186 1321.27 392.912 1321.83 392.365  c
1322.38 391.818 1322.66 390.951 1322.66 389.764  c
1322.66 388.597 1322.38 387.740 1321.83 387.193  c
1321.27 386.646 1320.39 386.373 1319.18 386.373  c
1317.74 386.373 l
h
1316.55 385.404 m
1318.99 385.404 l
1320.69 385.404 1321.93 385.756 1322.72 386.459  c
1323.52 387.162 1323.91 388.264 1323.91 389.764  c
1323.91 391.274 1323.51 392.383 1322.72 393.092  c
1321.92 393.800 1320.68 394.154 1318.99 394.154  c
1316.55 394.154 l
1316.55 385.404 l
h
f
2 J
10.0000 M
.200000 .400000 1.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1335.00 390.000 m
1335.00 398.284 1328.28 405.000 1320.00 405.000  c
1311.72 405.000 1305.00 398.284 1305.00 390.000  c
1305.00 381.716 1311.72 375.000 1320.00 375.000  c
1328.28 375.000 1335.00 381.716 1335.00 390.000  c
h
S
2 J
10.0000 M
.200000 .400000 1.00000 RG
newpath
1275.00 420.000 m
1275.00 428.284 1268.28 435.000 1260.00 435.000  c
1251.72 435.000 1245.00 428.284 1245.00 420.000  c
1245.00 411.716 1251.72 405.000 1260.00 405.000  c
1268.28 405.000 1275.00 411.716 1275.00 420.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1263.54 416.076 m
1263.54 417.326 l
1263.14 416.951 1262.71 416.673 1262.26 416.490  c
1261.82 416.308 1261.34 416.217 1260.83 416.217  c
1259.83 416.217 1259.06 416.524 1258.53 417.139  c
1258.00 417.753 1257.73 418.639 1257.73 419.795  c
1257.73 420.941 1258.00 421.821 1258.53 422.436  c
1259.06 423.050 1259.83 423.357 1260.83 423.357  c
1261.34 423.357 1261.82 423.264 1262.26 423.076  c
1262.71 422.889 1263.14 422.613 1263.54 422.248  c
1263.54 423.482 l
1263.13 423.764 1262.69 423.975 1262.22 424.115  c
1261.76 424.256 1261.27 424.326 1260.76 424.326  c
1259.43 424.326 1258.38 423.920 1257.62 423.107  c
1256.86 422.295 1256.48 421.191 1256.48 419.795  c
1256.48 418.389 1256.86 417.279 1257.62 416.467  c
1258.38 415.654 1259.43 415.248 1260.76 415.248  c
1261.28 415.248 1261.78 415.318 1262.24 415.459  c
1262.70 415.600 1263.14 415.805 1263.54 416.076  c
h
f
2 J
10.0000 M
.200000 .400000 1.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1275.00 420.000 m
1275.00 428.284 1268.28 435.000 1260.00 435.000  c
1251.72 435.000 1245.00 428.284 1245.00 420.000  c
1245.00 411.716 1251.72 405.000 1260.00 405.000  c
1268.28 405.000 1275.00 411.716 1275.00 420.000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
1377.38 325.404 m
1382.91 325.404 l
1382.91 326.404 l
1378.57 326.404 l
1378.57 328.998 l
1382.74 328.998 l
1382.74 329.982 l
1378.57 329.982 l
1378.57 333.154 l
1383.02 333.154 l
1383.02 334.154 l
1377.38 334.154 l
1377.38 325.404 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1395.00 330.000 m
1395.00 338.284 1388.28 345.000 1380.00 345.000  c
1371.72 345.000 1365.00 338.284 1365.00 330.000  c
1365.00 321.716 1371.72 315.000 1380.00 315.000  c
1388.28 315.000 1395.00 321.716 1395.00 330.000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
1472.49 332.904 m
1472.49 330.561 l
1470.55 330.561 l
1470.55 329.576 l
1473.66 329.576 l
1473.66 333.342 l
1473.20 333.665 1472.70 333.910 1472.16 334.076  c
1471.61 334.243 1471.02 334.326 1470.40 334.326  c
1469.02 334.326 1467.95 333.925 1467.18 333.123  c
1466.41 332.321 1466.02 331.212 1466.02 329.795  c
1466.02 328.357 1466.41 327.240 1467.18 326.443  c
1467.95 325.646 1469.02 325.248 1470.40 325.248  c
1470.96 325.248 1471.50 325.318 1472.01 325.459  c
1472.53 325.600 1473.01 325.805 1473.44 326.076  c
1473.44 327.342 l
1473.01 326.967 1472.54 326.686 1472.05 326.498  c
1471.55 326.311 1471.03 326.217 1470.49 326.217  c
1469.42 326.217 1468.61 326.516 1468.08 327.115  c
1467.54 327.714 1467.27 328.607 1467.27 329.795  c
1467.27 330.972 1467.54 331.860 1468.08 332.459  c
1468.61 333.058 1469.42 333.357 1470.49 333.357  c
1470.91 333.357 1471.28 333.321 1471.61 333.248  c
1471.94 333.175 1472.23 333.061 1472.49 332.904  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1485.00 330.000 m
1485.00 338.284 1478.28 345.000 1470.00 345.000  c
1461.72 345.000 1455.00 338.284 1455.00 330.000  c
1455.00 321.716 1461.72 315.000 1470.00 315.000  c
1478.28 315.000 1485.00 321.716 1485.00 330.000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
1288.24 299.982 m
1288.24 303.186 l
1290.15 303.186 l
1290.78 303.186 1291.26 303.053 1291.56 302.787  c
1291.87 302.521 1292.02 302.118 1292.02 301.576  c
1292.02 301.024 1291.87 300.620 1291.56 300.365  c
1291.26 300.110 1290.78 299.982 1290.15 299.982  c
1288.24 299.982 l
h
1288.24 296.373 m
1288.24 299.014 l
1289.99 299.014 l
1290.58 299.014 1291.01 298.904 1291.29 298.686  c
1291.57 298.467 1291.71 298.139 1291.71 297.701  c
1291.71 297.253 1291.57 296.920 1291.29 296.701  c
1291.01 296.482 1290.58 296.373 1289.99 296.373  c
1288.24 296.373 l
h
1287.06 295.404 m
1290.09 295.404 l
1290.99 295.404 1291.69 295.592 1292.17 295.967  c
1292.66 296.342 1292.90 296.873 1292.90 297.561  c
1292.90 298.102 1292.77 298.532 1292.52 298.850  c
1292.27 299.167 1291.91 299.363 1291.43 299.436  c
1292.01 299.561 1292.47 299.821 1292.79 300.217  c
1293.11 300.613 1293.27 301.107 1293.27 301.701  c
1293.27 302.482 1293.01 303.087 1292.48 303.514  c
1291.95 303.941 1291.19 304.154 1290.20 304.154  c
1287.06 304.154 l
1287.06 295.404 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1305.00 300.000 m
1305.00 308.284 1298.28 315.000 1290.00 315.000  c
1281.72 315.000 1275.00 308.284 1275.00 300.000  c
1275.00 291.716 1281.72 285.000 1290.00 285.000  c
1298.28 285.000 1305.00 291.716 1305.00 300.000  c
h
S
2 J
10.0000 M
.200000 .600000 .400000 RG
newpath
1395.00 240.000 m
1395.00 248.284 1388.28 255.000 1380.00 255.000  c
1371.72 255.000 1365.00 248.284 1365.00 240.000  c
1365.00 231.716 1371.72 225.000 1380.00 225.000  c
1388.28 225.000 1395.00 231.716 1395.00 240.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1380.00 236.576 m
1378.40 240.920 l
1381.61 240.920 l
1380.00 236.576 l
h
1379.33 235.404 m
1380.68 235.404 l
1384.00 244.154 l
1382.77 244.154 l
1381.97 241.904 l
1378.04 241.904 l
1377.24 244.154 l
1375.99 244.154 l
1379.33 235.404 l
h
f
2 J
10.0000 M
.200000 .600000 .400000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1395.00 240.000 m
1395.00 248.284 1388.28 255.000 1380.00 255.000  c
1371.72 255.000 1365.00 248.284 1365.00 240.000  c
1365.00 231.716 1371.72 225.000 1380.00 225.000  c
1388.28 225.000 1395.00 231.716 1395.00 240.000  c
h
S
2 J
10.0000 M
.752941 .752941 .752941 RG
3.00000 w
0 J
1.45000 M
newpath
1425.00 420.000 m
1485.00 420.000 l
S
0.00000 0.00000 0.00000 RG
1.00000 w
newpath
1454.80 430.168 m
1451.82 434.840 l
1454.80 434.840 l
1454.80 430.168 l
h
1454.49 429.137 m
1455.99 429.137 l
1455.99 434.840 l
1457.24 434.840 l
1457.24 435.825 l
1455.99 435.825 l
1455.99 437.887 l
1454.80 437.887 l
1454.80 435.825 l
1450.87 435.825 l
1450.87 434.684 l
1454.49 429.137 l
h
f
3.00000 w
.752941 .752941 .752941 RG
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
3.00000 w
0 J
1.45000 M
newpath
1334.23 394.743 m
1386.28 412.094 l
S
newpath
1395.77 415.257 m
1383.52 404.584 l
1385.10 411.699 l
1379.56 416.442 l
h
f
1.00000 w
newpath
1356.32 422.961 m
1358.26 422.961 l
1358.26 416.289 l
1356.15 416.711 l
1356.15 415.633 l
1358.24 415.211 l
1359.43 415.211 l
1359.43 422.961 l
1361.37 422.961 l
1361.37 423.961 l
1356.32 423.961 l
1356.32 422.961 l
h
f
3.00000 w
1.00000 w
2 J
10.0000 M
.752941 .752941 .752941 RG
3.00000 w
0 J
1.45000 M
newpath
1306.65 396.842 m
1290.00 405.378 l
1273.48 413.428 l
S
0.00000 0.00000 0.00000 RG
1.00000 w
newpath
1284.67 389.994 m
1285.23 390.119 1285.67 390.372 1285.99 390.752  c
1286.31 391.132 1286.46 391.603 1286.46 392.166  c
1286.46 393.031 1286.17 393.700 1285.57 394.174  c
1284.98 394.648 1284.14 394.885 1283.04 394.885  c
1282.68 394.885 1282.30 394.848 1281.91 394.775  c
1281.52 394.702 1281.12 394.593 1280.71 394.447  c
1280.71 393.307 l
1281.04 393.494 1281.39 393.637 1281.79 393.736  c
1282.18 393.835 1282.58 393.885 1283.01 393.885  c
1283.75 393.885 1284.32 393.739 1284.71 393.447  c
1285.10 393.156 1285.29 392.728 1285.29 392.166  c
1285.29 391.656 1285.11 391.254 1284.75 390.963  c
1284.38 390.671 1283.88 390.525 1283.25 390.525  c
1282.21 390.525 l
1282.21 389.557 l
1283.29 389.557 l
1283.87 389.557 1284.31 389.439 1284.62 389.205  c
1284.93 388.971 1285.09 388.635 1285.09 388.197  c
1285.09 387.749 1284.93 387.406 1284.61 387.166  c
1284.30 386.926 1283.84 386.807 1283.25 386.807  c
1282.91 386.807 1282.56 386.840 1282.19 386.908  c
1281.82 386.976 1281.41 387.083 1280.96 387.228  c
1280.96 386.182 l
1281.42 386.057 1281.85 385.963 1282.24 385.900  c
1282.63 385.838 1283.00 385.807 1283.34 385.807  c
1284.25 385.807 1284.96 386.010 1285.48 386.416  c
1286.00 386.822 1286.26 387.374 1286.26 388.072  c
1286.26 388.562 1286.12 388.973 1285.85 389.307  c
1285.57 389.640 1285.18 389.869 1284.67 389.994  c
h
f
3.00000 w
.752941 .752941 .752941 RG
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
.752941 .752941 .752941 RG
3.00000 w
0 J
1.45000 M
newpath
1384.74 344.230 m
1405.26 405.770 l
S
0.00000 0.00000 0.00000 RG
1.00000 w
newpath
1382.71 375.692 m
1379.73 380.363 l
1382.71 380.363 l
1382.71 375.692 l
h
1382.40 374.660 m
1383.90 374.660 l
1383.90 380.363 l
1385.15 380.363 l
1385.15 381.348 l
1383.90 381.348 l
1383.90 383.410 l
1382.71 383.410 l
1382.71 381.348 l
1378.78 381.348 l
1378.78 380.207 l
1382.40 374.660 l
h
f
3.00000 w
.752941 .752941 .752941 RG
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
3.00000 w
0 J
1.45000 M
newpath
1369.39 340.607 m
1337.68 372.322 l
S
newpath
1330.61 379.393 m
1345.63 373.206 l
1338.56 371.438 l
1336.79 364.367 l
h
f
1.00000 w
newpath
1341.93 350.640 m
1343.87 350.640 l
1343.87 343.968 l
1341.76 344.390 l
1341.76 343.312 l
1343.85 342.890 l
1345.04 342.890 l
1345.04 350.640 l
1346.98 350.640 l
1346.98 351.640 l
1341.93 351.640 l
1341.93 350.640 l
h
f
3.00000 w
1.00000 w
2 J
10.0000 M
.752941 .752941 .752941 RG
3.00000 w
0 J
1.45000 M
newpath
1418.32 407.519 m
1461.68 342.481 l
S
0.00000 0.00000 0.00000 RG
1.00000 w
newpath
1427.99 368.484 m
1432.13 368.484 l
1432.13 369.484 l
1426.57 369.484 l
1426.57 368.484 l
1427.02 368.026 1427.63 367.403 1428.41 366.617  c
1429.18 365.830 1429.67 365.322 1429.87 365.093  c
1430.25 364.677 1430.52 364.320 1430.67 364.023  c
1430.82 363.726 1430.90 363.437 1430.90 363.156  c
1430.90 362.687 1430.74 362.307 1430.41 362.015  c
1430.08 361.723 1429.65 361.578 1429.13 361.578  c
1428.76 361.578 1428.37 361.640 1427.95 361.765  c
1427.54 361.890 1427.10 362.088 1426.63 362.359  c
1426.63 361.156 l
1427.11 360.968 1427.56 360.825 1427.97 360.726  c
1428.38 360.627 1428.76 360.578 1429.10 360.578  c
1430.01 360.578 1430.73 360.804 1431.27 361.257  c
1431.82 361.710 1432.09 362.317 1432.09 363.078  c
1432.09 363.432 1432.02 363.770 1431.88 364.093  c
1431.75 364.416 1431.50 364.796 1431.15 365.234  c
1431.05 365.348 1430.73 365.677 1430.21 366.218  c
1429.69 366.760 1428.95 367.515 1427.99 368.484  c
h
f
3.00000 w
.752941 .752941 .752941 RG
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
3.00000 w
0 J
1.45000 M
newpath
1474.74 344.230 m
1492.09 396.283 l
S
newpath
1495.26 405.770 m
1496.44 389.563 l
1491.70 395.097 l
1484.58 393.516 l
h
f
1.00000 w
newpath
1494.76 374.628 m
1496.70 374.628 l
1496.70 367.956 l
1494.59 368.378 l
1494.59 367.300 l
1496.69 366.878 l
1497.87 366.878 l
1497.87 374.628 l
1499.81 374.628 l
1499.81 375.628 l
1494.76 375.628 l
1494.76 374.628 l
h
f
3.00000 w
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
1286.36 314.552 m
1266.06 395.746 l
S
newpath
1263.64 405.448 m
1273.34 392.412 l
1266.37 394.534 l
1261.21 389.380 l
h
f
1.00000 w
newpath
1260.88 357.425 m
1265.02 357.425 l
1265.02 358.425 l
1259.45 358.425 l
1259.45 357.425 l
1259.90 356.966 1260.51 356.344 1261.29 355.557  c
1262.07 354.771 1262.55 354.263 1262.75 354.034  c
1263.14 353.617 1263.40 353.261 1263.56 352.964  c
1263.71 352.667 1263.78 352.378 1263.78 352.097  c
1263.78 351.628 1263.62 351.248 1263.29 350.956  c
1262.96 350.664 1262.54 350.518 1262.02 350.518  c
1261.64 350.518 1261.25 350.581 1260.84 350.706  c
1260.43 350.831 1259.99 351.029 1259.52 351.300  c
1259.52 350.097 l
1260.00 349.909 1260.44 349.766 1260.85 349.667  c
1261.26 349.568 1261.64 349.518 1261.99 349.518  c
1262.89 349.518 1263.62 349.745 1264.16 350.198  c
1264.70 350.651 1264.97 351.258 1264.97 352.018  c
1264.97 352.373 1264.90 352.711 1264.77 353.034  c
1264.63 353.357 1264.39 353.737 1264.03 354.175  c
1263.93 354.289 1263.62 354.617 1263.10 355.159  c
1262.57 355.701 1261.83 356.456 1260.88 357.425  c
h
f
3.00000 w
1.00000 w
2 J
10.0000 M
.752941 .752941 .752941 RG
3.00000 w
0 J
1.45000 M
newpath
1304.23 304.743 m
1365.77 325.257 l
S
0.00000 0.00000 0.00000 RG
1.00000 w
newpath
1340.15 303.128 m
1340.71 303.253 1341.15 303.505 1341.47 303.886  c
1341.78 304.266 1341.94 304.737 1341.94 305.300  c
1341.94 306.164 1341.65 306.834 1341.05 307.307  c
1340.46 307.781 1339.61 308.018 1338.52 308.018  c
1338.16 308.018 1337.78 307.982 1337.39 307.909  c
1337.00 307.836 1336.60 307.727 1336.19 307.581  c
1336.19 306.440 l
1336.52 306.628 1336.87 306.771 1337.26 306.870  c
1337.65 306.969 1338.06 307.018 1338.49 307.018  c
1339.23 307.018 1339.79 306.873 1340.18 306.581  c
1340.58 306.289 1340.77 305.862 1340.77 305.300  c
1340.77 304.789 1340.59 304.388 1340.22 304.097  c
1339.86 303.805 1339.36 303.659 1338.72 303.659  c
1337.69 303.659 l
1337.69 302.690 l
1338.77 302.690 l
1339.34 302.690 1339.79 302.573 1340.10 302.339  c
1340.41 302.104 1340.57 301.768 1340.57 301.331  c
1340.57 300.883 1340.41 300.539 1340.09 300.300  c
1339.77 300.060 1339.32 299.940 1338.72 299.940  c
1338.39 299.940 1338.04 299.974 1337.67 300.042  c
1337.30 300.110 1336.89 300.216 1336.44 300.362  c
1336.44 299.315 l
1336.90 299.190 1337.33 299.097 1337.72 299.034  c
1338.11 298.972 1338.47 298.940 1338.82 298.940  c
1339.72 298.940 1340.44 299.143 1340.96 299.550  c
1341.48 299.956 1341.74 300.508 1341.74 301.206  c
1341.74 301.695 1341.60 302.107 1341.33 302.440  c
1341.05 302.774 1340.66 303.003 1340.15 303.128  c
h
f
3.00000 w
.752941 .752941 .752941 RG
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
3.00000 w
0 J
1.45000 M
newpath
1310.80 286.133 m
1367.52 248.320 l
S
newpath
1302.48 291.679 m
1318.43 288.559 l
1311.84 285.439 l
1311.49 278.159 l
h
f
1.00000 w
newpath
1325.59 260.349 m
1329.73 260.349 l
1329.73 261.349 l
1324.17 261.349 l
1324.17 260.349 l
1324.62 259.891 1325.23 259.269 1326.01 258.482  c
1326.78 257.696 1327.27 257.188 1327.47 256.959  c
1327.85 256.542 1328.12 256.185 1328.27 255.889  c
1328.42 255.592 1328.50 255.303 1328.50 255.021  c
1328.50 254.553 1328.34 254.172 1328.01 253.881  c
1327.68 253.589 1327.25 253.443 1326.73 253.443  c
1326.36 253.443 1325.97 253.506 1325.55 253.631  c
1325.14 253.756 1324.70 253.954 1324.23 254.224  c
1324.23 253.021 l
1324.71 252.834 1325.16 252.691 1325.57 252.592  c
1325.98 252.493 1326.36 252.443 1326.70 252.443  c
1327.61 252.443 1328.33 252.670 1328.87 253.123  c
1329.42 253.576 1329.69 254.183 1329.69 254.943  c
1329.69 255.297 1329.62 255.636 1329.48 255.959  c
1329.35 256.282 1329.10 256.662 1328.75 257.099  c
1328.65 257.214 1328.33 257.542 1327.81 258.084  c
1327.29 258.626 1326.55 259.381 1325.59 260.349  c
h
f
3.00000 w
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
1380.00 255.000 m
1380.00 305.000 l
S
newpath
1380.00 315.000 m
1386.25 300.000 l
1380.00 303.750 l
1373.75 300.000 l
h
f
1.00000 w
newpath
1367.26 286.948 m
1369.20 286.948 l
1369.20 280.276 l
1367.09 280.698 l
1367.09 279.620 l
1369.19 279.198 l
1370.37 279.198 l
1370.37 286.948 l
1372.31 286.948 l
1372.31 287.948 l
1367.26 287.948 l
1367.26 286.948 l
h
f
3.00000 w
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
1390.61 250.607 m
1452.32 312.322 l
S
newpath
1459.39 319.393 m
1453.21 304.367 l
1451.44 311.438 l
1444.37 313.206 l
h
f
1.00000 w
newpath
1439.17 274.653 m
1439.74 274.778 1440.18 275.031 1440.49 275.411  c
1440.81 275.791 1440.97 276.263 1440.97 276.825  c
1440.97 277.690 1440.67 278.359 1440.08 278.833  c
1439.49 279.307 1438.64 279.544 1437.55 279.544  c
1437.18 279.544 1436.81 279.507 1436.42 279.434  c
1436.02 279.361 1435.63 279.252 1435.22 279.106  c
1435.22 277.966 l
1435.54 278.153 1435.90 278.296 1436.29 278.395  c
1436.68 278.494 1437.09 278.544 1437.52 278.544  c
1438.26 278.544 1438.82 278.398 1439.21 278.106  c
1439.60 277.815 1439.80 277.388 1439.80 276.825  c
1439.80 276.315 1439.62 275.914 1439.25 275.622  c
1438.89 275.330 1438.39 275.184 1437.75 275.184  c
1436.72 275.184 l
1436.72 274.216 l
1437.80 274.216 l
1438.37 274.216 1438.81 274.098 1439.13 273.864  c
1439.44 273.630 1439.59 273.294 1439.59 272.856  c
1439.59 272.408 1439.44 272.065 1439.12 271.825  c
1438.80 271.585 1438.34 271.466 1437.75 271.466  c
1437.42 271.466 1437.07 271.499 1436.70 271.567  c
1436.33 271.635 1435.92 271.742 1435.47 271.888  c
1435.47 270.841 l
1435.93 270.716 1436.35 270.622 1436.74 270.559  c
1437.13 270.497 1437.50 270.466 1437.84 270.466  c
1438.75 270.466 1439.46 270.669 1439.99 271.075  c
1440.51 271.481 1440.77 272.033 1440.77 272.731  c
1440.77 273.221 1440.63 273.632 1440.35 273.966  c
1440.08 274.299 1439.68 274.528 1439.17 274.653  c
h
f
3.00000 w
1.00000 w
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
